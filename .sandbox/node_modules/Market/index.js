#!/usr/bin/env node

// Dependencies
// ============
var express = require("express")
, httpProxy = require('http-proxy')
, path = require('path')
, request = require('request')
, exec = require('child_process').exec
, fs = require('fs-extra')
, program = require('commander');

var config = undefined;

// Cmd line configuration
//=======================
program.version('1.0.0')
.option('-p, --port <n>', 'Port number', parseInt)
.parse(process.argv);

// Start express
var app = express();


/* Proxy */
var proxy = httpProxy
.createProxyServer();

app.use(express.static(path.join(__dirname, 'public')));

app.get('/download/:name', function(req, res) {
	if(config === undefined)
		return res.status(403).send("No config!");

	var name = req.params.name
	, rnd 	 = ''+ new Date().getTime()
	, url 	 = 'http://apps.xway.io/download/' + req.params.name
	, appTgz = path.join(config.tmpDir, rnd + '.tgz')
	, tmpDir = path.join(config.appsDir, rnd)
	, appDir = path.join(config.appsDir, name);


	request.get(url, function (error, response, body) {
		console.log("Download done!");
		if (!fs.existsSync(appTgz)) {
			res.status(404).send("404 : Not found");
			return;
		} else {
			fs.mkdirSync(tmpDir, '0755');
			if (fs.existsSync(appDir)) {
				console.log('Updating %s', name);
				fs.removeSync(appDir);
			}
			console.log('Decompressing bundle...', name);
			var cmd = "tar xf " + appTgz + " -C " + tmpDir + " --strip-components=1";
			exec(cmd, function(err) {
				if (err) {
					res.status(500).send("Unable to install");
					return console.error(err);
				} else {
					fs.renameSync(tmpDir, appDir);
					res.status(204).send("ok");
				}
			});
		}
	})
	.pipe(fs.createWriteStream(appTgz));
});

// Proxy
app.use('/', function(req, res) {
	proxy.web(req, res, { 
		target: 'http://market.netbeast.co',
		ws: true
	});
});

// Start server
request('http://localhost/config', function (error, response, body) {
	if (!error) {
		config = JSON.parse(body);
		console.log(config);
	} else {
		throw error;
	}

	var server = app.listen(program.port, function () {
		console.log('App listening at http://%s:%s', 
			server.address().address,
			server.address().port);
	});
});